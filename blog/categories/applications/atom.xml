<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: applications | Not <strike>Fired</strike> Programmer]]></title>
  <link href="http://elhsmart.github.io/blog/categories/applications/atom.xml" rel="self"/>
  <link href="http://elhsmart.github.io/"/>
  <updated>2017-02-06T07:26:14+02:00</updated>
  <id>http://elhsmart.github.io/</id>
  <author>
    <name><![CDATA[Ed Tretyakov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[It's all about money - CurrencyFair]]></title>
    <link href="http://elhsmart.github.io/blog/2015/05/25/its-all-about-money-currencyfair/"/>
    <updated>2015-05-25T07:52:41+03:00</updated>
    <id>http://elhsmart.github.io/blog/2015/05/25/its-all-about-money-currencyfair</id>
    <content type="html"><![CDATA[<p>So, CurrencyFair. Really impressive and promising company from Dublin, Ireland. Try to help you exchange your money at minimal cost. And, yeah - Irishmen! Remember good days when one of Irish bikers visited my city and decide to show, how Car Bomb works - dat was really funny day. If you want to know little bit more about this company - visit <a href="https://www.currencyfair.com/about-us/">About Us</a> section. But dat gentleman with tie is little scary. Or just go and read <a href="http://tech.currencyfair.com/2015/03/19/engineering-hiring-challenges/#.VWK5QGSqqko">blog post</a> about this test app. Really interesting.</p>

<p>Did not remember where I found post about careers in CurrencyFair and still don&rsquo;t know, if remote position is acceptable (and it will be another sad moment if not) - but guys sended to me google docs link to test application requirements. As i said - digging into some stuff for me is much more better compared to overclicking on job sites and so on.</p>

<!-- more -->


<p>As test application this project require any candidate to create little trading application. Everything as usual - API endpoint with message consumer about successfull trades, some sort of message processor on the backend to analyze this stuff and representation of processed data on frontend. Each part has some &ldquo;experience levels&rdquo; and can be done in various ways. And you as job seeker completely free in choices of platform, language, tech stack and everythnig else related.</p>

<p>One more very tricky thing about this application - everythnig must be published to Github before final submit. So&hellip; What we gonna do as first step? Right! In few minutes after reading requirements I start browsing github search with &ldquo;currencyfair&rdquo; keyword in it. Some gems was found, but most of test projects had some issues as for me and choices of known for me tools was questionable.</p>

<p>Like <a href="https://github.com/ktunkiewicz/cfdemo">Kamil Tunkiewicz</a> app (btw this guy is already employed at CF) - really good demo, but why Node.JS as consumer? I don&rsquo;t think that mixin of languages is nice and buzz about Node furious speed is little bit overbumped nowadays. And startup scripts for daemons not the RHEL-way or Unix-way done. Kamil done good job with Statistics analyze (and seems like this is my weak part of test), but presentation can be better. And empty git history - is this man really programmed whole stuff with simgle shot? But I will put my hat off - this guy is cooked Ratchet for WS messages broadcasting. (But still with usual way with ZMQ, as i see, but I didn&rsquo;t find anythnig related to Ratchet in the sources. Probably just need to ask).</p>

<p>After quick analyze of tools people used and tech all this stuff based on in one thnig i mentioned - nobody uses some dev environment. This is not about composer / npm / pypi / any other dependency resolving tool. This is mostly about environment itself. When I looked at glance to the things that CF used to work with my smile start shining. Vagrant, Chef, DC dedication, om-nom-nom - everythnig was so damn familiar. And nobody from github didn&rsquo;t try to go with this.</p>

<p>Sure using Chef even this is chef-solo is time expensive, but that days and now I have lots of free time. And some of my things related to Gentoo is already applied to Chef cookbooks - so I  know I can handle this. Sure i&rsquo;m not a rockstar, but wannabe rockstar is even better!</p>

<p>With everything else I decide to separate every component and go with PHP-prototyped daemons. Because I like to kill childs, mwahahah. Sorry, just kiddin. Daemons are very flexible and did not overweight whole project structure. PHP prototypes of already working daemons can be developed really fast and easy - I swear I&rsquo;m spend much more time in Chef configuring compared to my cfdaemon programing itself. And PEAR already have very nice library to work with daemons.</p>

<p>Daemons need some sort of pipe between each other, and Beanstalkd was chosen as this pipe. Really fast, scalable and easy-to-use memcache protocol based queue.</p>

<p>I decide that for my purposes of websocket server Ratchet is very monstrous so I choose Wrench as little bit more specialized tool. And it work like a charm.</p>

<p>For my shame I did not spent too much time on analytics of currency values and trades done so far.</p>

<p>My basic workflow in my imagination on that time was next: Something submit new trade to endpoint (Slim PHP framework, filtering, immediate putting of new job into queue), Analytics daemon process new message, do all the stuff and pass it to the next tube (CFDaemon, basicly do some digits play and put it into memcache, and into MySQL just for permanent storaging), Websocket&rsquo;s server receive new message from pipe and pass it to frontend (CFSocket / Wrench, if someone is already connected to frontend), frontend blink country on the global map and display some info about hovered country (Raphael.js. Try it!).</p>

<p>And everything is cooked with Chef in Vagrant'ed box. For me this was the point and some kind of &ldquo;Cherry on top of cake&rdquo;. To be honest - writing right recipe for Chef was most time-consuming task it this test. Didn&rsquo;t researched capabilites of recipes testing, but it was really fun to remember everythnig after my battle with &ldquo;clustertoy&rdquo; (I will write a little post about it later). For everyone who will follow my path - use Berkshelf, Luke! Really helpful utility to maintain recipe dependencies and great time-saver.</p>

<p>For whole test i&rsquo;ve spent around 15 hours (2-3 hours per day) and few litres of coffee. And that was really fun. Dunno what to describe - please review everything at <a href="https://github.com/elhsmart/currencyfair">https://github.com/elhsmart/currencyfair</a> and ping me, if you will have any questions related.</p>

<p>After this i just installed vagrant-digitalocean plugin, deployed everythnig to DigitalOcean and submitted my app with google docs form from test requirements. Dunno why the guys from CF promise to answer in two days, but I&rsquo;m still waiting for response/review and hope it will not be lost in debris.</p>

<p>So, it&rsquo;s time to move forward! Stay tuned.</p>
]]></content>
  </entry>
  
</feed>
